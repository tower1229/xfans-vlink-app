---
description:  电子商务系统 API 设计最佳实践，确保安全性、性能和可扩展性。
globs: app/api/**/*
alwaysApply: false
---
---
description: 电子商务系统 API 设计最佳实践，确保安全性、性能和可扩展性。
globs: app/api/**/*
alwaysApply: false
---

# 电子商务 API 设计最佳实践

## RESTful API 设计
- 遵循 REST 架构风格，使用适当的 HTTP 方法
- 实现资源的层次结构，使用清晰的 URL 路径
- 使用标准的 HTTP 状态码表示操作结果
- 实现 HATEOAS，提供资源间的关联链接

## GraphQL API 设计（如适用）
- 设计合理的 Schema，避免过于复杂的类型
- 实现高效的解析器，避免 N+1 查询问题
- 使用数据加载器批量获取数据
- 实现查询复杂度分析，防止恶意查询

## API 安全
- 实现强大的身份验证和授权机制
- 使用 JWT 或其他安全令牌进行身份验证
- 实现请求速率限制，防止 DDoS 攻击
- 验证所有输入数据，防止注入攻击

## API 版本控制
- 实现明确的 API 版本策略（URL、请求头或内容协商）
- 保持向后兼容性，避免破坏性更改
- 提供明确的版本弃用通知和迁移路径
- 维护详细的 API 变更日志

## 性能优化
- 实现适当的缓存策略（ETag、Cache-Control）
- 优化响应大小，支持压缩和部分响应
- 实现分页和筛选，避免大量数据传输
- 优化数据库查询，减少响应时间

## 错误处理
- 提供一致的错误响应格式
- 包含有用的错误消息和错误代码
- 避免暴露敏感信息或堆栈跟踪
- 实现全面的日志记录，便于问题排查

## 文档和测试
- 使用 OpenAPI/Swagger 提供详细的 API 文档
- 编写全面的 API 测试，包括单元测试和集成测试
- 实现自动化测试，确保 API 质量
- 提供示例请求和响应，便于开发者理解

## 电子商务特定 API
- 设计产品目录 API，支持复杂的筛选和搜索
- 实现购物车和结账 API，确保事务一致性
- 设计订单管理 API，支持完整的订单生命周期
- 实现用户账户和个人资料 API，确保数据安全